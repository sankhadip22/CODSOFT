import random
try:
    import pyperclip
    CLIPBOARD_AVAILABLE = True
except ImportError:
    CLIPBOARD_AVAILABLE = False

from tkinter import *
from tkinter.ttk import *
from tkinter import messagebox

def generate_password():
    length = var1.get()

    # Character sets
    lower = "abcdefghijklmnopqrstuvwxyz"
    upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    digits = "0123456789"
    symbols = "!@#$%^&*()"

    password = ""

    # Password strength logic
    if var.get() == 1:  # Low
        chars = lower
    elif var.get() == 0:  # Medium
        chars = lower + upper
    elif var.get() == 3:  # Strong
        chars = lower + upper + digits + symbols
    else:
        return ""

    for i in range(length):
        password += random.choice(chars)

    return password

def generate():
    password = generate_password()
    entry.delete(0, END)   # Clear old password
    entry.insert(0, password)  # Insert new password

def copy1():
    random_password = entry.get()
    if not random_password:
        messagebox.showwarning("Warning", "No password to copy!")
        return
    
    if CLIPBOARD_AVAILABLE:
        pyperclip.copy(random_password)
        messagebox.showinfo("Copied", "Password copied to clipboard!")
    else:
        messagebox.showerror("Error", "pyperclip not installed.\nRun:\n\npip install pyperclip")

# GUI Setup
root = Tk()
var = IntVar()
var1 = IntVar()

root.title("Random Password Generator")
root.geometry("400x180")

# Password Label + Entry
Random_password = Label(root, text="Password") 
Random_password.grid(row=0, column=0, pady=10, padx=5)

entry = Entry(root, width=30)
entry.grid(row=0, column=1, padx=5)

# Length Label + Combobox
c_label = Label(root, text="Length")
c_label.grid(row=1, column=0, pady=10)

combo = Combobox(root, textvariable=var1, width=5)
combo['values'] = tuple(range(8, 33))  # 8â€“32
combo.current(0)  # Default value
combo.grid(column=1, row=1)

# Buttons
copy_button = Button(root, text="Copy", command=copy1)
copy_button.grid(row=0, column=2, padx=5)

generate_button = Button(root, text="Generate", command=generate)
generate_button.grid(row=1, column=2, padx=5)

# Radio buttons for strength
radio_low = Radiobutton(root, text="Low", variable=var, value=1)
radio_low.grid(row=2, column=0, sticky='W', padx=5)

radio_middle = Radiobutton(root, text="Medium", variable=var, value=0) 
radio_middle.grid(row=2, column=1, sticky='W') 

radio_strong = Radiobutton(root, text="Strong", variable=var, value=3)
radio_strong.grid(row=2, column=2, sticky='W') 

# Run GUI
root.mainloop()
